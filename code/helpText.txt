ShoppingList is a no-cloud solution to your shopping woes. Private, secure and convenient, ShoppingList is revolutionizing the experience of the mundane grocery or Home Depot run.

ShoppingList is written in Python. Tkinter is the Python module that creates the graphical interface.

ShoppingList ('SL' from here on) reads from an LibreOffice Calc or Excel .xlsx file. SL reads data from the first four columns.

The first column must be named 'Qty', which is short for Quantity. (Just in case you've never run across that abbreviation before.)

You can print your list in 'aisle order' by setting your database spreadsheet up with that in mind.  

 - Create a spreadsheet for a store. Save it in it's own .xlsx file.  
 - In that file create a tab for each aisle. 
 
 When you print, your items will be printed from top to bottom in tab order.

THE COOLEST PART: The Printer.

SL is intended for use with a networked 80mm ESC/POS receipt printer. There are many under a hundred bucks to choose from. No more carrying that $900.00 phone around in your hand while navigating the treacherous isles of your local grocery store.  Instead, your list is on a small piece of paper that won't break if it gets dropped.

The python-escpos module is used to interface to with the printer.  It contains support for serial and USB protocols as well as network, but network is so simple that it is currently the default transport protocol. Perhaps in the future the other protocols can be added.

SL optionally creates a PDF version of your list when you print. This file is saved in the folder where your Shopping List .xlsx file is.

THE FILE MENU: 
There are three options: Configure, Select Database, and Exit.  

Configure lets you set a few options:

1) the IP address for the receipt printer if you have one.  If not, leave it at 192.168.254.254.

2) You can provide your own list title, or you can let SL create the title from the filename of your database.

- If you check the 'List Title Same as Filename' option, your list title will automatically change when you select a different database.

- If you uncheck the option, you'll want to type your own title in the text box and save it.

- If you set the title text, try to keep it less than around 20 characters long.

3) You can let SL create a .PDF version of your list automatically.  If selected, this will happen whether you have a printer or not.

Your preferences are stored in ShoppingList.ini which is in the same folder with ShoppingList.exe.

 - Select Database opens a Windows file selection dialog.  When you click on the file of your choice, the location of that file is saved in ShoppingList.ini.

FUNCTIONS EXPLAINED:

 - PRINT: This . . . well, it prints your list.  Afterwards you will see a box asking if you want to exit or not.  If you exit, your current selections will be retained in the database.  If you want to remove them, select 'No' and go back and use the clear All function to remove them.

 - RELOAD: Once you've selected your database file and set your printer IP address, it's time to add some stuff to your list.  In your .xlsx database (aka, spreadsheet), add the quantities in the Qty column to the things you need to buy. If you have SL open, after saving and closing the database file you can press the 'Reload' button and your updated list will be displayed in the 'Selected items' box.

 - CLEAR ALL: If you want to clear your selections from your database after printing your list, there are two steps:  1) Check the 'Clear All Qtys' checkbox, and 2) press the 'Clear All' button.  If you press the button without checking the box, your selections will NOT be cleared, and you will see a info box telling you just that.

 - EDIT DATABASE: Open the active database in your default spreadsheet app. Make your edits, then close the application to continue.  If you try to continue before closing the database, you'll get an error message telling you to close it.


You can always find the current version number in the 'About' dialog.